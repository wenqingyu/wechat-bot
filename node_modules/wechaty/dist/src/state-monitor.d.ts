/**
 * A - State A
 * B - State B
 */
export declare class StateMonitor<A, B> {
    private _client;
    private _target;
    private _current;
    private _stable;
    constructor(_client: string, initState: A | B);
    /**
     * set/get target state
     */
    target(newState?: A | B): A | B;
    /**
     * set/get current state
     * @param stable boolean  true for stable, false for inprocess
     */
    current(newState?: A | B, stable?: boolean): A | B;
    /**
     * does the current state be stable(not inprocess)?
     */
    stable(): boolean;
    /**
     * does the current state be inprocess(not stable)?
     */
    inprocess(): boolean;
    /**
     * get the client name
     */
    client(): string;
}
